// Code automatically generated by 'Generate Cone Mapping Model' script by Jolyon Troscianko

//Model fits:
//lw 0.9839132953684095
//mw 0.978184702344855
//sw 0.9893842236661792


// Generated: 2019/10/20   12:55:16


import ij.*;
import ij.plugin.filter.PlugInFilter;
import ij.process.*;

public class iPad2_Human_D65_ implements PlugInFilter {

ImageStack stack;
	public int setup(String arg, ImagePlus imp) { 
	stack = imp.getStack(); 
	return DOES_32 + STACK_REQUIRED; 
	}
public void run(ImageProcessor ip) {

IJ.showStatus("Cone Mapping");
float[] visR;
float[] visG;
float[] visB;
int w = stack.getWidth();
int h = stack.getHeight();
int dimension = w*h;

float[] lw = new float[dimension];
float[] mw = new float[dimension];
float[] sw = new float[dimension];

visR = (float[]) stack.getPixels(1);
visG = (float[]) stack.getPixels(2);
visB = (float[]) stack.getPixels(3);

for (int i=0;i<dimension;i++) {
lw[i] = (float) (-0.019017318268561647 +(visR[i]*0.0019432444054702002)+(visG[i]*0.008991857072610647)+(visB[i]*0.0031806262236715433)+(visR[i]*visG[i]*-2.855684815527654E-5)+(visR[i]*visB[i]*3.359494947338168E-5)+(visG[i]*visB[i]*-5.422737791973092E-5));
mw[i] = (float) (-0.03691494434770265 +(visR[i]*9.829611453997275E-4)+(visG[i]*0.00978604460230388)+(visB[i]*0.004375683508542328)+(visR[i]*visG[i]*-2.4776829607592256E-5)+(visR[i]*visB[i]*1.2470357374131294E-5)+(visG[i]*visB[i]*-4.756026054273144E-5));
sw[i] = (float) (-0.01694211993974621 +(visR[i]*-5.81534252565368E-4)+(visG[i]*0.0010998498263846183)+(visB[i]*0.012685827437750858)+(visR[i]*visG[i]*-6.376193146446272E-7)+(visR[i]*visB[i]*4.243565616472538E-5)+(visG[i]*visB[i]*-7.959182271328766E-5));
IJ.showProgress((float) i/dimension);
}

ImageStack outStack = new ImageStack(w, h);
outStack.addSlice("lw", lw);
outStack.addSlice("mw", mw);
outStack.addSlice("sw", sw);
new ImagePlus("Output", outStack).show();

}
}
