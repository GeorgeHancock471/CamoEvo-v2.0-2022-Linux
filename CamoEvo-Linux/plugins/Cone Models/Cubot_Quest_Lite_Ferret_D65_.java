// Code automatically generated by 'Generate Cone Mapping Model' script by Jolyon Troscianko

//Model fits:
//lw 0.990077415271087
//sw 0.9905502206226299


// Generated: 2020/4/28   15:52:24


import ij.*;
import ij.plugin.filter.PlugInFilter;
import ij.process.*;

public class Cubot_Quest_Lite_Ferret_D65_ implements PlugInFilter {

ImageStack stack;
	public int setup(String arg, ImagePlus imp) { 
	stack = imp.getStack(); 
	return DOES_32 + STACK_REQUIRED; 
	}
public void run(ImageProcessor ip) {

IJ.showStatus("Cone Mapping");
float[] visibleR;
float[] visibleG;
float[] visibleB;
int w = stack.getWidth();
int h = stack.getHeight();
int dimension = w*h;

float[] lw = new float[dimension];
float[] sw = new float[dimension];

visibleR = (float[]) stack.getPixels(1);
visibleG = (float[]) stack.getPixels(2);
visibleB = (float[]) stack.getPixels(3);

for (int i=0;i<dimension;i++) {
lw[i] = (float) (0.015195640699724903 +(visibleR[i]*6.539114648655799E-4)+(visibleG[i]*0.007509635011634103)+(visibleB[i]*8.748379435362173E-4)+(visibleR[i]*visibleG[i]*1.115449741097227E-5)+(visibleR[i]*visibleB[i]*5.707984885886562E-6)+(visibleG[i]*visibleB[i]*-2.9499447591968053E-7));
sw[i] = (float) (0.015761467491202698 +(visibleR[i]*-5.659621200055646E-4)+(visibleG[i]*5.484226139519753E-4)+(visibleB[i]*0.008883100762153198)+(visibleR[i]*visibleG[i]*6.4844743152591985E-6)+(visibleR[i]*visibleB[i]*6.108635149504401E-6)+(visibleG[i]*visibleB[i]*-2.5804209152258165E-6));
IJ.showProgress((float) i/dimension);
}

ImageStack outStack = new ImageStack(w, h);
outStack.addSlice("lw", lw);
outStack.addSlice("sw", sw);
new ImagePlus("Output", outStack).show();

}
}
