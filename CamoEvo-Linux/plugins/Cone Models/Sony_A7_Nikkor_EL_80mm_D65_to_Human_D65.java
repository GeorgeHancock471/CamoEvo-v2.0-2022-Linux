// Code automatically generated by 'Generate Cone Mapping Model' script by Jolyon Troscianko

//Model fits:
//lw 0.9996056542517032
//mw 0.9999413050240623
//sw 0.9946798132131356


// Generated: 2021/3/27   15:5:40


import ij.*;
import ij.plugin.filter.PlugInFilter;
import ij.process.*;

public class Sony_A7_Nikkor_EL_80mm_D65_to_Human_D65 implements PlugInFilter {

ImageStack stack;
	public int setup(String arg, ImagePlus imp) { 
	stack = imp.getStack(); 
	return DOES_32 + STACK_REQUIRED; 
	}
public void run(ImageProcessor ip) {

IJ.showStatus("Cone Mapping");
float[] vR;
float[] vG;
float[] vB;
int w = stack.getWidth();
int h = stack.getHeight();
int dimension = w*h;

float[] lw = new float[dimension];
float[] mw = new float[dimension];
float[] sw = new float[dimension];

vR = (float[]) stack.getPixels(1);
vG = (float[]) stack.getPixels(2);
vB = (float[]) stack.getPixels(3);

for (int i=0;i<dimension;i++) {
lw[i] = (float) (-6.006455734850902E-4 +(vR[i]*0.0020751713632881433)+(vG[i]*0.010579684347197221)+(vB[i]*-0.002789158780452506)+(vR[i]*vG[i]*-5.137406883784414E-6)+(vR[i]*vB[i]*2.46724811425881E-6)+(vG[i]*vB[i]*4.110949663695219E-6));
mw[i] = (float) (2.388829767444269E-4 +(vR[i]*-5.604202627976082E-4)+(vG[i]*0.01216047278393007)+(vB[i]*-0.0016672022286239065)+(vR[i]*vG[i]*-1.1943220083792282E-6)+(vR[i]*vB[i]*2.6722869415277755E-7)+(vG[i]*vB[i]*1.5113579877019894E-6));
sw[i] = (float) (0.009808142984960072 +(vR[i]*8.028656627303489E-4)+(vG[i]*-0.004443545588902982)+(vB[i]*0.01269305256021766)+(vR[i]*vG[i]*4.827982798946192E-6)+(vR[i]*vB[i]*-3.905305295304188E-6)+(vG[i]*vB[i]*5.56507293957552E-6));
IJ.showProgress((float) i/dimension);
}

ImageStack outStack = new ImageStack(w, h);
outStack.addSlice("lw", lw);
outStack.addSlice("mw", mw);
outStack.addSlice("sw", sw);
new ImagePlus("Output", outStack).show();

}
}
