// Code automatically generated by 'Generate Cone Mapping Model' script by Jolyon Troscianko

//Model fits:
//lw 0.9962783929857721
//sw 0.9920389394413536


// Generated: 2021/10/10   14:7:30


import ij.*;
import ij.plugin.filter.PlugInFilter;
import ij.process.*;

public class George_Ferret_D65_ implements PlugInFilter {

ImageStack stack;
	public int setup(String arg, ImagePlus imp) { 
	stack = imp.getStack(); 
	return DOES_32 + STACK_REQUIRED; 
	}
public void run(ImageProcessor ip) {

IJ.showStatus("Cone Mapping");
float[] visibleR;
float[] visibleG;
float[] visibleB;
float[] uvB;
float[] uvR;
int w = stack.getWidth();
int h = stack.getHeight();
int dimension = w*h;

float[] lw = new float[dimension];
float[] sw = new float[dimension];

visibleR = (float[]) stack.getPixels(1);
visibleG = (float[]) stack.getPixels(2);
visibleB = (float[]) stack.getPixels(3);
uvB = (float[]) stack.getPixels(4);
uvR = (float[]) stack.getPixels(5);

for (int i=0;i<dimension;i++) {
lw[i] = (float) (-0.009965796517085308 +(visibleR[i]*0.001675618663275144)+(visibleG[i]*0.00850796011439238)+(visibleB[i]*-6.550266690702731E-5)+(uvB[i]*-4.506193649479487E-5)+(uvR[i]*-8.557475912064802E-5)+(visibleR[i]*visibleG[i]*2.53304690651588E-6)+(visibleR[i]*visibleB[i]*2.5406163325939757E-6)+(visibleR[i]*uvB[i]*6.17866357820546E-5)+(visibleR[i]*uvR[i]*-6.702478468998283E-5)+(visibleG[i]*visibleB[i]*-1.031632283811675E-5)+(visibleG[i]*uvB[i]*-5.9605422414569905E-5)+(visibleG[i]*uvR[i]*4.7002175258113376E-5)+(visibleB[i]*uvB[i]*-3.208393215881202E-5)+(visibleB[i]*uvR[i]*5.770483617418315E-5)+(uvB[i]*uvR[i]*3.4439193702885485E-6));
sw[i] = (float) (-0.012591305463183277 +(visibleR[i]*8.200371342957632E-4)+(visibleG[i]*-0.00396547483176091)+(visibleB[i]*0.010725048602845979)+(uvB[i]*0.004019453407428407)+(uvR[i]*-0.00115315258160971)+(visibleR[i]*visibleG[i]*-5.849991442831257E-6)+(visibleR[i]*visibleB[i]*6.721270886573025E-5)+(visibleR[i]*uvB[i]*6.757900778706384E-5)+(visibleR[i]*uvR[i]*-1.3084844509549952E-4)+(visibleG[i]*visibleB[i]*-4.117660044093921E-5)+(visibleG[i]*uvB[i]*-4.0773800373922317E-4)+(visibleG[i]*uvR[i]*4.6408530842463147E-4)+(visibleB[i]*uvB[i]*2.9497394843665557E-4)+(visibleB[i]*uvR[i]*-3.5202404749610063E-4)+(uvB[i]*uvR[i]*4.773003545867292E-5));
IJ.showProgress((float) i/dimension);
}

ImageStack outStack = new ImageStack(w, h);
outStack.addSlice("lw", lw);
outStack.addSlice("sw", sw);
new ImagePlus("Output", outStack).show();

}
}
