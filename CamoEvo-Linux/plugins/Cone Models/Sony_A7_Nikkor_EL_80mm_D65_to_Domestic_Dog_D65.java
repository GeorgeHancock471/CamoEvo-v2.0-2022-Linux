// Code automatically generated by 'Generate Cone Mapping Model' script by Jolyon Troscianko

//Model fits:
//lw 0.9998340025464417
//sw 0.9953111463472246


// Generated: 2021/3/27   15:4:42


import ij.*;
import ij.plugin.filter.PlugInFilter;
import ij.process.*;

public class Sony_A7_Nikkor_EL_80mm_D65_to_Domestic_Dog_D65 implements PlugInFilter {

ImageStack stack;
	public int setup(String arg, ImagePlus imp) { 
	stack = imp.getStack(); 
	return DOES_32 + STACK_REQUIRED; 
	}
public void run(ImageProcessor ip) {

IJ.showStatus("Cone Mapping");
float[] vR;
float[] vG;
float[] vB;
float[] uB;
float[] uR;
int w = stack.getWidth();
int h = stack.getHeight();
int dimension = w*h;

float[] lw = new float[dimension];
float[] sw = new float[dimension];

vR = (float[]) stack.getPixels(1);
vG = (float[]) stack.getPixels(2);
vB = (float[]) stack.getPixels(3);
uB = (float[]) stack.getPixels(4);
uR = (float[]) stack.getPixels(5);

for (int i=0;i<dimension;i++) {
lw[i] = (float) (-7.123523708777612E-4 +(vR[i]*5.089903130959828E-4)+(vG[i]*0.009114048900861269)+(vB[i]*-5.275129971083977E-4)+(uB[i]*7.4109800005701E-4)+(uR[i]*1.0193490533041337E-4)+(vR[i]*vG[i]*-2.7043371294212735E-6)+(vR[i]*vB[i]*2.2288629914379152E-7)+(vR[i]*uB[i]*-1.0966446865055187E-5)+(vR[i]*uR[i]*1.3663689483608885E-5)+(vG[i]*vB[i]*2.7203744276307968E-6)+(vG[i]*uB[i]*1.2100363906841492E-5)+(vG[i]*uR[i]*-1.852899213244661E-5)+(vB[i]*uB[i]*1.5652893367813406E-6)+(vB[i]*uR[i]*2.7893769623105007E-6)+(uB[i]*uR[i]*-1.1355625540577852E-7));
sw[i] = (float) (0.004057629470778836 +(vR[i]*6.388169176462646E-4)+(vG[i]*-0.0031294159894390064)+(vB[i]*0.008950221077826188)+(uB[i]*0.003936337486102546)+(uR[i]*-6.907665930738043E-4)+(vR[i]*vG[i]*9.122074398186348E-8)+(vR[i]*vB[i]*1.6374978733657997E-8)+(vR[i]*uB[i]*-9.377051400903013E-6)+(vR[i]*uR[i]*2.9689581413574957E-6)+(vG[i]*vB[i]*-4.25941821918319E-6)+(vG[i]*uB[i]*-9.611342097855637E-5)+(vG[i]*uR[i]*9.314490134819369E-5)+(vB[i]*uB[i]*1.528805067644733E-4)+(vB[i]*uR[i]*-1.3806244803009454E-4)+(uB[i]*uR[i]*1.3097331354420582E-6));
IJ.showProgress((float) i/dimension);
}

ImageStack outStack = new ImageStack(w, h);
outStack.addSlice("lw", lw);
outStack.addSlice("sw", sw);
new ImagePlus("Output", outStack).show();

}
}
