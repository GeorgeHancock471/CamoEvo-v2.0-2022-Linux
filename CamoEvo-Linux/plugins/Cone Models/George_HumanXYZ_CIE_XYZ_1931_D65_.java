// Code automatically generated by 'Generate Cone Mapping Model' script by Jolyon Troscianko

//Model fits:
//X 0.9951664073485106
//Y 0.996667738351267
//Z 0.9934028844679319


// Generated: 2022/1/16   10:21:6


import ij.*;
import ij.plugin.filter.PlugInFilter;
import ij.process.*;

public class George_HumanXYZ_CIE_XYZ_1931_D65_ implements PlugInFilter {

ImageStack stack;
	public int setup(String arg, ImagePlus imp) { 
	stack = imp.getStack(); 
	return DOES_32 + STACK_REQUIRED; 
	}
public void run(ImageProcessor ip) {

IJ.showStatus("Cone Mapping");
float[] visibleR;
float[] visibleG;
float[] visibleB;
float[] uvB;
float[] uvR;
int w = stack.getWidth();
int h = stack.getHeight();
int dimension = w*h;

float[] X = new float[dimension];
float[] Y = new float[dimension];
float[] Z = new float[dimension];

visibleR = (float[]) stack.getPixels(1);
visibleG = (float[]) stack.getPixels(2);
visibleB = (float[]) stack.getPixels(3);
uvB = (float[]) stack.getPixels(4);
uvR = (float[]) stack.getPixels(5);

for (int i=0;i<dimension;i++) {
X[i] = (float) (-0.013585992095020575 +(visibleR[i]*0.007128687447716973)+(visibleG[i]*0.002169689827993617)+(visibleB[i]*0.001828417535298906)+(uvB[i]*-0.00465901806480449)+(uvR[i]*0.0036272290570045843)+(visibleR[i]*visibleG[i]*1.2526174014996689E-5)+(visibleR[i]*visibleB[i]*1.0632933930977453E-5)+(visibleR[i]*uvB[i]*1.4155210157232762E-4)+(visibleR[i]*uvR[i]*-1.747187387875852E-4)+(visibleG[i]*visibleB[i]*-4.4208832165773025E-5)+(visibleG[i]*uvB[i]*-8.194662743721506E-5)+(visibleG[i]*uvR[i]*1.2532912179387005E-4)+(visibleB[i]*uvB[i]*7.924143825075412E-5)+(visibleB[i]*uvR[i]*-8.602440976355787E-5)+(uvB[i]*uvR[i]*2.146087838425159E-5));
Y[i] = (float) (-0.010840244149905991 +(visibleR[i]*0.002077362617898499)+(visibleG[i]*0.010840808440654362)+(visibleB[i]*-0.002228510483858581)+(uvB[i]*-0.0015430877678797735)+(uvR[i]*9.03510368612126E-4)+(visibleR[i]*visibleG[i]*4.720116346874783E-6)+(visibleR[i]*visibleB[i]*1.2139888176788136E-6)+(visibleR[i]*uvB[i]*9.093482246266128E-5)+(visibleR[i]*uvR[i]*-9.742797170364208E-5)+(visibleG[i]*visibleB[i]*-1.568229221680884E-5)+(visibleG[i]*uvB[i]*-8.007895523094582E-5)+(visibleG[i]*uvR[i]*7.0068370471953E-5)+(visibleB[i]*uvB[i]*-6.028583264691765E-6)+(visibleB[i]*uvR[i]*3.678492080749482E-5)+(uvB[i]*uvR[i]*-1.2241362042468467E-6));
Z[i] = (float) (-0.010546293362907366 +(visibleR[i]*7.857792569625904E-4)+(visibleG[i]*-0.0038657282487333656)+(visibleB[i]*0.013571089523816748)+(uvB[i]*0.0011757744930375386)+(uvR[i]*-0.0015705183875006213)+(visibleR[i]*visibleG[i]*-2.337217183192918E-6)+(visibleR[i]*visibleB[i]*3.34489918405006E-5)+(visibleR[i]*uvB[i]*7.77496638819759E-5)+(visibleR[i]*uvR[i]*-1.0826283655503118E-4)+(visibleG[i]*visibleB[i]*-1.871980175206361E-5)+(visibleG[i]*uvB[i]*-3.4831779324733225E-4)+(visibleG[i]*uvR[i]*3.649479901173455E-4)+(visibleB[i]*uvB[i]*1.579646316998498E-4)+(visibleB[i]*uvR[i]*-1.7848366051874815E-4)+(uvB[i]*uvR[i]*3.450197076588348E-5));
IJ.showProgress((float) i/dimension);
}

ImageStack outStack = new ImageStack(w, h);
outStack.addSlice("X", X);
outStack.addSlice("Y", Y);
outStack.addSlice("Z", Z);
new ImagePlus("Output", outStack).show();

}
}
