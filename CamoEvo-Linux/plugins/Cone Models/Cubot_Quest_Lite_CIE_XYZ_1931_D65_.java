// Code automatically generated by 'Generate Cone Mapping Model' script by Jolyon Troscianko

//Model fits:
//X 0.982881996293725
//Y 0.9892562173277867
//Z 0.9938116078465875


// Generated: 2020/0/21   13:51:28


import ij.*;
import ij.plugin.filter.PlugInFilter;
import ij.process.*;

public class Cubot_Quest_Lite_CIE_XYZ_1931_D65_ implements PlugInFilter {

ImageStack stack;
	public int setup(String arg, ImagePlus imp) { 
	stack = imp.getStack(); 
	return DOES_32 + STACK_REQUIRED; 
	}
public void run(ImageProcessor ip) {

IJ.showStatus("Cone Mapping");
float[] visibleR;
float[] visibleG;
float[] visibleB;
int w = stack.getWidth();
int h = stack.getHeight();
int dimension = w*h;

float[] X = new float[dimension];
float[] Y = new float[dimension];
float[] Z = new float[dimension];

visibleR = (float[]) stack.getPixels(1);
visibleG = (float[]) stack.getPixels(2);
visibleB = (float[]) stack.getPixels(3);

for (int i=0;i<dimension;i++) {
X[i] = (float) (0.008873683253947101 +(visibleR[i]*0.0030436788728793666)+(visibleG[i]*0.004741721757707319)+(visibleB[i]*0.0013303018612182207)+(visibleR[i]*visibleG[i]*1.7247175946760667E-5)+(visibleR[i]*visibleB[i]*4.307782195958999E-6)+(visibleG[i]*visibleB[i]*-2.8967234273297018E-6));
Y[i] = (float) (0.014209020261674591 +(visibleR[i]*9.160994308145032E-4)+(visibleG[i]*0.008442447941403704)+(visibleB[i]*-3.2179677396629617E-4)+(visibleR[i]*visibleG[i]*1.3842315462514615E-5)+(visibleR[i]*visibleB[i]*7.347399221790336E-6)+(visibleG[i]*visibleB[i]*-3.30482824758007E-6));
Z[i] = (float) (0.01714893462161486 +(visibleR[i]*-6.251220899277888E-4)+(visibleG[i]*0.0012765362554812399)+(visibleB[i]*0.008473616881202531)+(visibleR[i]*visibleG[i]*4.975868361742884E-6)+(visibleR[i]*visibleB[i]*-3.523440110596335E-6)+(visibleG[i]*visibleB[i]*8.585402343594268E-6));
IJ.showProgress((float) i/dimension);
}

ImageStack outStack = new ImageStack(w, h);
outStack.addSlice("X", X);
outStack.addSlice("Y", Y);
outStack.addSlice("Z", Z);
new ImagePlus("Output", outStack).show();

}
}
