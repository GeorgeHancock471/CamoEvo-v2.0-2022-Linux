// Code automatically generated by 'Generate Cone Mapping Model' script by Jolyon Troscianko

//Model fits:
//lw 0.9998115172317528
//sw 0.995626398777289


// Generated: 2021/3/27   14:41:20


import ij.*;
import ij.plugin.filter.PlugInFilter;
import ij.process.*;

public class Sony_A7_Nikkor_EL_80mm_D65_to_Ferret_D65 implements PlugInFilter {

ImageStack stack;
	public int setup(String arg, ImagePlus imp) { 
	stack = imp.getStack(); 
	return DOES_32 + STACK_REQUIRED; 
	}
public void run(ImageProcessor ip) {

IJ.showStatus("Cone Mapping");
float[] vR;
float[] vG;
float[] vB;
float[] uB;
float[] uR;
int w = stack.getWidth();
int h = stack.getHeight();
int dimension = w*h;

float[] lw = new float[dimension];
float[] sw = new float[dimension];

vR = (float[]) stack.getPixels(1);
vG = (float[]) stack.getPixels(2);
vB = (float[]) stack.getPixels(3);
uB = (float[]) stack.getPixels(4);
uR = (float[]) stack.getPixels(5);

for (int i=0;i<dimension;i++) {
lw[i] = (float) (-8.448196627648539E-4 +(vR[i]*8.406346018345701E-4)+(vG[i]*0.009231770494892957)+(vB[i]*-7.690860919612405E-4)+(uB[i]*8.169934345493437E-4)+(uR[i]*-1.837740650028465E-4)+(vR[i]*vG[i]*-3.10995071278243E-6)+(vR[i]*vB[i]*4.824381035470846E-7)+(vR[i]*uB[i]*-1.3176201590215545E-5)+(vR[i]*uR[i]*1.6960346317678382E-5)+(vG[i]*vB[i]*3.108565060148011E-6)+(vG[i]*uB[i]*1.6147744364534342E-5)+(vG[i]*uR[i]*-2.4639088951162607E-5)+(vB[i]*uB[i]*-5.463645216344043E-7)+(vB[i]*uR[i]*5.459089881776307E-6)+(uB[i]*uR[i]*1.547277218505681E-7));
sw[i] = (float) (0.0042385281344582155 +(vR[i]*6.254545461469905E-4)+(vG[i]*-0.003205134715475766)+(vB[i]*0.009432863482766668)+(uB[i]*0.003988509543667139)+(uR[i]*-0.0011350130920496754)+(vR[i]*vG[i]*3.3983775298150997E-7)+(vR[i]*vB[i]*1.9451616865522413E-7)+(vR[i]*uB[i]*-1.1075060995992452E-5)+(vR[i]*uR[i]*5.942637571390747E-6)+(vG[i]*vB[i]*-4.411370873750745E-6)+(vG[i]*uB[i]*-9.463758186238876E-5)+(vG[i]*uR[i]*8.890791011898471E-5)+(vB[i]*uB[i]*1.5308696094295192E-4)+(vB[i]*uR[i]*-1.3746325954294266E-4)+(uB[i]*uR[i]*1.7910810110763216E-6));
IJ.showProgress((float) i/dimension);
}

ImageStack outStack = new ImageStack(w, h);
outStack.addSlice("lw", lw);
outStack.addSlice("sw", sw);
new ImagePlus("Output", outStack).show();

}
}
