// Code automatically generated by 'Generate Cone Mapping Model' script by Jolyon Troscianko

//Model fits:
//lw 0.9971109261284815
//mw 0.9994286539069406
//sw 0.998590962124167
//vs 0.996400945464799
//dbl 0.999669913932539


// Generated: 2021/3/27   15:3:55


import ij.*;
import ij.plugin.filter.PlugInFilter;
import ij.process.*;

public class Sony_A7_Nikkor_EL_80mm_D65_to_Peafowl_D65 implements PlugInFilter {

ImageStack stack;
	public int setup(String arg, ImagePlus imp) { 
	stack = imp.getStack(); 
	return DOES_32 + STACK_REQUIRED; 
	}
public void run(ImageProcessor ip) {

IJ.showStatus("Cone Mapping");
float[] vR;
float[] vG;
float[] vB;
float[] uB;
float[] uR;
int w = stack.getWidth();
int h = stack.getHeight();
int dimension = w*h;

float[] lw = new float[dimension];
float[] mw = new float[dimension];
float[] sw = new float[dimension];
float[] vs = new float[dimension];
float[] dbl = new float[dimension];

vR = (float[]) stack.getPixels(1);
vG = (float[]) stack.getPixels(2);
vB = (float[]) stack.getPixels(3);
uB = (float[]) stack.getPixels(4);
uR = (float[]) stack.getPixels(5);

for (int i=0;i<dimension;i++) {
lw[i] = (float) (-0.008591803772144569 +(vR[i]*0.007918537258163437)+(vG[i]*0.006339412281486844)+(vB[i]*-0.0045618520404025545)+(uB[i]*0.0015572529948568092)+(uR[i]*-0.001378496355093298)+(vR[i]*vG[i]*-1.8619719011778623E-5)+(vR[i]*vB[i]*4.207406255816981E-6)+(vR[i]*uB[i]*-4.143357241073862E-5)+(vR[i]*uR[i]*6.402357160022322E-5)+(vG[i]*vB[i]*1.9437256041832837E-5)+(vG[i]*uB[i]*9.4169904948518E-5)+(vG[i]*uR[i]*-1.365465385554353E-4)+(vB[i]*uB[i]*-6.38352146543223E-5)+(vB[i]*uR[i]*7.853250691713793E-5)+(uB[i]*uR[i]*2.9064255117625547E-6));
mw[i] = (float) (0.005456564699134462 +(vR[i]*-0.0023526237219288434)+(vG[i]*0.01701597654118183)+(vB[i]*-0.00480945010234971)+(uB[i]*-2.5237840464921115E-4)+(uR[i]*1.9044751504544355E-4)+(vR[i]*vG[i]*2.3634302196835553E-6)+(vR[i]*vB[i]*3.640246963800965E-6)+(vR[i]*uB[i]*1.090826568391605E-5)+(vR[i]*uR[i]*-1.2295803388812314E-5)+(vG[i]*vB[i]*-8.069127793429193E-6)+(vG[i]*uB[i]*-8.514316460767563E-5)+(vG[i]*uR[i]*7.36029417374508E-5)+(vB[i]*uB[i]*9.331714427904467E-5)+(vB[i]*uR[i]*-7.843431258915892E-5)+(uB[i]*uR[i]*2.0032095616264855E-6));
sw[i] = (float) (-0.003760674792554964 +(vR[i]*-9.04587093539387E-4)+(vG[i]*0.003314017597372552)+(vB[i]*0.007974852711477517)+(uB[i]*-8.130474572032146E-4)+(uR[i]*6.375752479113666E-4)+(vR[i]*vG[i]*-1.8065895138592933E-6)+(vR[i]*vB[i]*3.162915413606703E-8)+(vR[i]*uB[i]*1.2705362467453802E-5)+(vR[i]*uR[i]*-1.6071857776203863E-5)+(vG[i]*vB[i]*4.2176243398549395E-6)+(vG[i]*uB[i]*5.453372218311053E-5)+(vG[i]*uR[i]*-4.189860383526446E-5)+(vB[i]*uB[i]*-9.012581801886216E-5)+(vB[i]*uR[i]*8.167022303061509E-5)+(uB[i]*uR[i]*-5.352517601932175E-6));
vs[i] = (float) (0.0036544678808998203 +(vR[i]*4.924920965716011E-4)+(vG[i]*-0.0025058769849895923)+(vB[i]*0.009061170081952058)+(uB[i]*0.004153683739598431)+(uR[i]*-0.00144859750536063)+(vR[i]*vG[i]*1.0135697336594004E-7)+(vR[i]*vB[i]*8.189638971400208E-7)+(vR[i]*uB[i]*-8.377046312550306E-6)+(vR[i]*uR[i]*2.405829303853911E-6)+(vG[i]*vB[i]*-4.399131233763123E-6)+(vG[i]*uB[i]*-8.810134466958289E-5)+(vG[i]*uR[i]*8.555378875241447E-5)+(vB[i]*uB[i]*1.4164197087081066E-4)+(vB[i]*uR[i]*-1.2880737967006315E-4)+(uB[i]*uR[i]*1.4011442955338612E-6));
dbl[i] = (float) (-0.0014438713667519391 +(vR[i]*8.300958437064242E-4)+(vG[i]*0.012220598563605216)+(vB[i]*-0.0031881690782971004)+(uB[i]*5.854626115492174E-4)+(uR[i]*-5.325858229622905E-4)+(vR[i]*vG[i]*-3.7439032421460284E-6)+(vR[i]*vB[i]*-7.233792431106408E-7)+(vR[i]*uB[i]*-2.1398700826082833E-5)+(vR[i]*uR[i]*2.9545675268820874E-5)+(vG[i]*vB[i]*5.738423959353631E-6)+(vG[i]*uB[i]*3.444550278063481E-5)+(vG[i]*uR[i]*-5.073860303326044E-5)+(vB[i]*uB[i]*-1.4645024566872631E-5)+(vB[i]*uR[i]*2.1619268357990924E-5)+(uB[i]*uR[i]*1.1661940424782807E-6));
IJ.showProgress((float) i/dimension);
}

ImageStack outStack = new ImageStack(w, h);
outStack.addSlice("lw", lw);
outStack.addSlice("mw", mw);
outStack.addSlice("sw", sw);
outStack.addSlice("vs", vs);
outStack.addSlice("dbl", dbl);
new ImagePlus("Output", outStack).show();

}
}
